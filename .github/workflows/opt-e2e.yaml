# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Modified End to End Tests
jobs:
  compatibility:
    strategy:
      matrix:
        jdk:
        - 8
        - 11
        zk:
        - 3.5.9
        - 3.6.3
        - 3.7.0
        - nightly
      fail-fast: false
    timeout-minutes: 360
    runs-on: ubuntu-latest
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-compatibility (${{ matrix.jdk }}, ${{ matrix.zk }}).csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/zookeeper/zookeeper', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - uses: actions/checkout@v3
    - run: touch optcd-3.txt
    - name: Set up JDK ${{ matrix.jdk }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.jdk }}
        distribution: temurin
    - run: touch optcd-4.txt
    - name: Cache local maven repository
      uses: actions/cache@v3
      with:
        path: |-
          ~/.m2/repository/
          !~/.m2/repository/org/apache/zookeeper
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - run: touch optcd-5.txt
    - name: Show the first log message
      run: git log -n1
    - run: touch optcd-6.txt
    - name: Install C Dependencies
      run: |-
        sudo apt update
        sudo apt install -y libcppunit-dev libsasl2-dev
    - run: touch optcd-7.txt
    - name: Build with Maven
      run: mvn -B -V -e -ntp "-Dstyle.color=always" package -DskipTests
      env:
        MAVEN_OPTS: -Djansi.force=true
    - run: touch optcd-8.txt
    - name: Download ZooKeeper ${{ matrix.zk }}
      run: |-
        curl -O https://archive.apache.org/dist/zookeeper/zookeeper-${{ matrix.zk }}/apache-zookeeper-${{ matrix.zk }}-bin.tar.gz
        tar -xzvf apache-zookeeper-${{ matrix.zk }}-bin.tar.gz
    - run: touch optcd-9.txt
    - name: Test ZooKeeper nightly server and ${{ matrix.zk }} client
      run: tools/ci/test-connectivity.py --server . --client apache-zookeeper-${{
        matrix.zk }}-bin
      env:
        ZOOCFG: zoo_sample.cfg
    - run: touch optcd-10.txt
    - name: Test ZooKeeper ${{ matrix.zk }} server and nightly client
      run: tools/ci/test-connectivity.py --server apache-zookeeper-${{ matrix.zk }}-bin
        --client .
      env:
        ZOOCFG: zoo_sample.cfg
    - run: touch optcd-11.txt
    - name: Test ZooKeeper nightly server and client
      run: tools/ci/test-connectivity.py --server . --client .
      env:
        ZOOCFG: zoo_sample.cfg
    - run: touch optcd-12.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-compatibility (${{ matrix.jdk }}, ${{ matrix.zk }})
        path: /home/runner/inotifywait-log-compatibility (${{ matrix.jdk }}, ${{ matrix.zk
          }}).csv
    name: compatibility (${{ matrix.jdk }}, ${{ matrix.zk }})
'on':
- push
- workflow_dispatch
